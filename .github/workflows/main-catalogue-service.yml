name: Catalogue Service

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    - name: Restore dependencies for CatalogueService
      run: dotnet restore ./CatalogueService

    - name: Build CatalogueService
      run: dotnet build ./CatalogueService --no-restore --configuration Release

    - name: Test CatalogueService
      run: dotnet test ./CatalogueService --no-build --verbosity normal --configuration Release

  analyze:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Sonar Scan CatalogueService
      uses: highbyte/sonarscan-dotnet@v2.3.0
      with:
        sonarProjectKey: ${{ vars.SONARPROJECTKEYBACKEND }}
        sonarProjectName: ${{ vars.SONARPROJECTNAMEBACKEND }}
        sonarOrganization: ${{ vars.SONARORGANIZATION }}
        dotnetBuildArguments: ./CatalogueService --configuration Release
        dotnetTestArguments: ./CatalogueService --no-build --configuration Release --verbosity normal --logger trx --collect:"XPlat Code Coverage" -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=opencover
        sonarBeginArguments: /d:sonar.cs.opencover.reportsPaths="**/TestResults/**/coverage.opencover.xml" -d:sonar.cs.vstest.reportsPaths="**/TestResults/*.trx" /d:sonar.coverage.exclusions="${{env.EXCLUDE_FROM_COVERAGE}}" /d:sonar.exclusions="${{env.EXCLUDE_FROM_SONAR}}" 
    
    env:
        EXCLUDE_FROM_COVERAGE: "**/Program.cs, **/Extensions/*, **/Exceptions/**, **/Data/*, **/Migrations/*, **/DI/*, **/Entities/*, **/Validators/*, **/Enums/**/*, **/Repositories/**, **/MappingConfigurations/*, **/ViewModels/**/*, **/Controllers/*, **/Utilities/*"
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        EXCLUDE_FROM_SONAR: "**/Migrations/*, **/Dockerfile"
